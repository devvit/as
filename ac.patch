diff --git a/src/server/game/AI/NpcBots/botcommands.cpp b/src/server/game/AI/NpcBots/botcommands.cpp
index 320f22e95..88da8bbb3 100644
--- a/src/server/game/AI/NpcBots/botcommands.cpp
+++ b/src/server/game/AI/NpcBots/botcommands.cpp
@@ -676,6 +676,7 @@ public:
             { "vehicle",    npcbotVehicleCommandTable                                                                               },
             { "dump",       npcbotDumpCommandTable                                                                                  },
             { "wp",         npcbotWPCommandTable                                                                                    },
+            { "coord",     HandleNpcBotSpawnCommand2,               rbac::RBAC_PERM_COMMAND_NPCBOT_SPAWN,              Console::Yes  },
         };
 
         static ChatCommandTable commandTable =
@@ -4182,6 +4183,63 @@ public:
         handler->SendGlobalGMSysMessage("NpcBot config settings reloaded.");
         return true;
     }
+
+    static bool HandleNpcBotSpawnCommand2(ChatHandler* handler, Optional<uint32> botid,
+            Optional<uint32> mapid, Optional<float> x, Optional<float> y, Optional<float> z, Optional<float> o) {
+        if (!botid || !mapid || !x || !y || !z || !o) return false;
+
+        uint32 id = uint32(*botid);
+
+        CreatureTemplate const* creInfo = sObjectMgr->GetCreatureTemplate(id);
+
+        if (!creInfo) return false;
+
+        if (!creInfo->IsNPCBot()) return false;
+
+        if (id == BOT_ENTRY_MIRROR_IMAGE_BM) return false;
+
+        if (BotDataMgr::SelectNpcBotData(id)) return false;
+
+        WorldDatabasePreparedStatement* stmt = WorldDatabase.GetPreparedStatement(WORLD_SEL_CREATURE_BY_ID);
+        stmt->SetArguments(id, id, id);
+        PreparedQueryResult res2 = WorldDatabase.Query(stmt);
+        if (res2) return false;
+
+        Map* map = sMapMgr->FindMap(*mapid, 0);
+
+        Creature* creature = new Creature();
+        if (!creature->Create(map->GenerateLowGuid<HighGuid::Unit>(), map, PHASEMASK_NORMAL, id, 0,
+                    float(*x), float(*y), float(*z), float(*o)))
+        {
+            delete creature;
+            return false;
+        }
+
+        NpcBotExtras const* _botExtras = BotDataMgr::SelectNpcBotExtras(id);
+        if (!_botExtras)
+        {
+            delete creature;
+            return false;
+        }
+
+        uint8 bot_spec = bot_ai::SelectSpecForClass(_botExtras->bclass);
+        BotDataMgr::AddNpcBotData(id, bot_ai::DefaultRolesForClass(_botExtras->bclass, bot_spec), bot_spec,
+creature->GetCreatureTemplate()->faction);
+
+        creature->SaveToDB(map->GetId(), (1 << map->GetSpawnMode()), PHASEMASK_NORMAL);
+
+        uint32 db_guid = creature->GetSpawnId();
+        if (!creature->LoadBotCreatureFromDB(db_guid, map))
+        {
+            delete creature;
+            return false;
+        }
+
+        sObjectMgr->AddCreatureToGrid(db_guid, sObjectMgr->GetCreatureData(db_guid));
+
+        handler->SendSysMessage("NpcBot successfully spawned");
+        return true;
+    }
 };
 
 void AddSC_script_bot_commands()
diff --git a/src/server/game/AI/NpcBots/botgiver.cpp b/src/server/game/AI/NpcBots/botgiver.cpp
index c4737a0c0..f99f01377 100644
--- a/src/server/game/AI/NpcBots/botgiver.cpp
+++ b/src/server/game/AI/NpcBots/botgiver.cpp
@@ -181,6 +181,11 @@ public:
                     //go through bots map to find what bots are available
                     std::unique_lock<std::shared_mutex> lock(*BotDataMgr::GetLock());
                     NpcBotRegistry const& allBots = BotDataMgr::GetExistingNPCBots();
+                    std::map<int, int> rgCount;
+                    for (int irace = RACE_HUMAN; irace < MAX_RACES; irace++) {
+                        rgCount[irace * 100 + GENDER_MALE] = 0;
+                        rgCount[irace * 100 + GENDER_FEMALE] = 0;
+                    }
                     for (NpcBotRegistry::const_iterator ci = allBots.begin(); ci != allBots.end(); ++ci)
                     {
                         Creature const* bot = *ci;
@@ -191,6 +196,9 @@ public:
                             !(bot->GetRaceMask() & ((player->GetRaceMask() & RACEMASK_ALLIANCE) ? RACEMASK_ALLIANCE : RACEMASK_HORDE)))
                             continue;
 
+                        rgCount[100 * bot->GetRace() + bot->GetGender()] += 1;
+                        if (rgCount[100 * bot->GetRace() + bot->GetGender()] > 1) continue;
+
                         std::ostringstream message1;
                         message1 << bot_ai::LocalizedNpcText(player, BOT_TEXT_BOTGIVER_WISH_TO_HIRE_) << bot->GetName() << '?';
 
